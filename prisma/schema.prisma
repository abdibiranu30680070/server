datasource db {
  provider = "postgresql" // or "mysql" depending on your DB
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  user
  admin
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  name             String
  password         String
  role             UserRole  @default(user) // Use enum instead of string
  resetToken       String?   // Add resetToken as an optional field
  resetTokenExpiry DateTime? // Add resetTokenExpiry as an optional field

  // Inverse relations
  auditLogs        AuditLog[]  
  patients         Patient[]   
}

model AuditLog {
  id          String   @id @default(uuid())
  action      String
  actionType  String   // Example: 'create', 'update', 'delete'
  details     String?  // Optional: Description of the action
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id])
}

model Patient {
  Id                        Int      @id @default(autoincrement())
  name                      String
  Age                       Int
  BMI                       Float
  Insulin                   Float
  Pregnancies               Int
  Glucose                   Float
  BloodPressure             Float
  SkinThickness             Float
  DiabetesPedigreeFunction  Float
  prediction                Boolean
  precentage                Float    @default(0.0)
  riskLevel                 String   @default("Low") // New field for risk level (e.g., Low, Medium, High)
  recommendation            String?  // New optional field for recommendations
  CreatedAt                 DateTime @default(now())
  UpdatedAt                 DateTime @updatedAt
  userId                    String   // Make the userId field non-nullable
  user                      User     @relation(fields: [userId], references: [id])
}
